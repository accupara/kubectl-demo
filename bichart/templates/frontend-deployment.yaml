{{ if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: {{ .Values.frontend.appName }}
  name: {{ .Values.frontend.appName }}
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.frontend.appName }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.frontend.appName }}
    spec:
      affinity:
        {{- if .Values.frontend.nodeAffinity }}
        nodeAffinity:
          {{ toYaml .Values.frontend.nodeAffinity | indent 10 }}
        {{- end }}
      initContainers:
        - command:
          - npm
          - i
          envFrom:
            - secretRef:
                name: bichart-secrets
          env:
            {{- if .Values.frontend.env }}
            {{- range $k, $v := .Values.frontend.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end -}}
            {{- end }}
          workingDir: /app
          image: {{ .Values.frontend.image }}
          name: {{ .Values.frontend.appName }}-install
          volumeMounts:
            - mountPath: /app
              name: {{ .Values.frontend.appName }}-hostpath0
      containers:
        - command:
            - sleep
            - "1800"
          envFrom:
            - secretRef:
                name: bichart-secrets
          env:
            {{- if .Values.frontend.env }}
            {{- range $k, $v := .Values.frontend.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end -}}
            {{- end }}
            {{- if .Values.global.env }}
            {{- range $k, $v := .Values.global.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end -}}
            {{- end }}
            - name: PORT
              value: {{ .Values.frontend.port | quote }}
            - name: BACKEND_ADDRESS
              value: http://{{ .Values.backend.serviceName }}:{{ .Values.backend.port }}/
          workingDir: /app
          image: busybox
          name: {{ .Values.frontend.appName }}-busybox
        - command:
            - npm
            - start
          envFrom:
            - secretRef:
                name: bichart-secrets
          env:
            {{- if .Values.frontend.env }}
            {{- range $k, $v := .Values.frontend.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end -}}
            {{- end }}
            {{- if .Values.global.env }}
            {{- range $k, $v := .Values.global.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end -}}
            {{- end }}
            - name: PORT
              value: {{ .Values.frontend.port | quote }}
            - name: BACKEND_ADDRESS
              value: http://{{ .Values.backend.serviceName }}:{{ .Values.backend.port }}/
          workingDir: /app
          image: {{ .Values.frontend.image }}
          name: {{ .Values.frontend.appName }}
          #livenessProbe:
          #  exec:
          #    command:
          #      - wget
          #      - localhost
          #      - -O
          #      - /dev/null
          #  failureThreshold: 3
          #  periodSeconds: 60
          #  timeoutSeconds: 30
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: {{ .Values.frontend.appName }}-hostpath0
      hostname: {{ .Values.frontend.appName }}
      restartPolicy: Always
      volumes:
        - hostPath:
            path: {{ .Values.global.bifrontend }}
          name: {{ .Values.frontend.appName }}-hostpath0
status: {}
{{- end }}
